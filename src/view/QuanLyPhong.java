/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;


import dao.PhongDAO;
import model.Phong;

import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.time.format.DateTimeFormatter;
import java.util.List;

/**
 *
 * @author Admin
 */
public class QuanLyPhong extends javax.swing.JFrame {
    
   private static final java.util.logging.Logger logger =
            java.util.logging.Logger.getLogger(QuanLyPhong.class.getName());

    private static Integer idPhong = null;

    // Formatter cho Timestamp -> String có giờ
    private static final DateTimeFormatter TS_FMT =
            DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");

    /**
     * Creates new form QuanLyPhong
     */
    public QuanLyPhong() throws SQLException {
        initComponents();
        // Center window on screen
        setLocationRelativeTo(null);
        loadDatas("", "");
    }
    
    private void resetField() {
        txtGiaPhong.setText("");
        txtTenPhong.setText("");
        txtMoTa.setText("");
        txtTimKiem.setText("");
    }
    
 
    
     private void loadDatas(String search, String cbSearch) throws SQLException {
        List<Phong> phongs = PhongDAO.getAllPhong(search, cbSearch);
        DefaultTableModel model = (DefaultTableModel) TablePhong.getModel();
        model.setRowCount(0);

        for (Phong p : phongs) {
            String ngayThemStr = tsToString(p.getNgay_them());         // Timestamp -> String
            String ngayCapStr  = tsToString(p.getNgay_cap_nhat());     // Timestamp -> String
            model.addRow(new Object[]{
                    p.getId(),
                    p.getTen_phong(),
                    p.getGia_phong(),
                    p.getMo_ta(),
                    p.getTrang_thai(),
                    ngayThemStr,
                    ngayCapStr
            });
        }
    }
     // ====== Helpers ======
    private static String tsToString(Timestamp ts) {
        return ts == null ? "" : ts.toLocalDateTime().format(TS_FMT);
    }

    private boolean validateForm(boolean showDialog) {
        String ten = txtTenPhong.getText().trim();
        String gia = txtGiaPhong.getText().trim();
        String trangThai = (String) cbTrangThai.getSelectedItem();

        StringBuilder err = new StringBuilder();

        if (ten.isEmpty()) err.append("• Tên phòng không được để trống\n");

        if (gia.isEmpty()) {
            err.append("• Giá phòng không được để trống\n");
        } else {
            // chấp nhận số nguyên/số thập phân dương
            if (!gia.matches("^\\d+(?:\\.\\d+)?$")) {
                err.append("• Giá phòng phải là số hợp lệ (ví dụ: 120000 hoặc 120000.5)\n");
            } else {
                try {
                    double v = Double.parseDouble(gia);
                    if (v <= 0) err.append("• Giá phòng phải > 0\n");
                } catch (NumberFormatException ex) {
                    err.append("• Giá phòng vượt quá giới hạn số\n");
                }
            }
        }

        if (trangThai == null || trangThai.isEmpty()) {
            err.append("• Vui lòng chọn trạng thái\n");
        }

        if (err.length() > 0) {
            if (showDialog) {
                JOptionPane.showMessageDialog(this, err.toString(), "Dữ liệu không hợp lệ", JOptionPane.WARNING_MESSAGE);
            }
            return false;
        }
        return true;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablePhong = new javax.swing.JTable();
        cbTrangThai = new javax.swing.JComboBox<>();
        txtTenPhong = new javax.swing.JTextField();
        btnXoa = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        txtGiaPhong = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMoTa = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel7.setText("Mô tả");

        jLabel5.setText("Giá phòng/giờ");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Quản lý phòng");

        TablePhong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Tên phòng", "Giá phòng/giờ", "Mô tả", "Trạng thái", "Ngày thêm", "Ngày cập nhật"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablePhong.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                TablePhongAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        TablePhong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablePhongMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablePhong);

        cbTrangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa đặt", "Đã đặt", "Đang dọn" }));
        cbTrangThai.setToolTipText("");

        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel2.setText("Tên phòng");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jLabel4.setText("Trạng thái");

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        txtMoTa.setColumns(20);
        txtMoTa.setRows(5);
        jScrollPane2.setViewportView(txtMoTa);

        jButton1.setText("Trở lại");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)
                                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTenPhong)
                                .addComponent(cbTrangThai, 0, 239, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtGiaPhong)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnReset, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                                .addContainerGap(70, Short.MAX_VALUE))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(327, 327, 327))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTenPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbTrangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGiaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablePhongAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_TablePhongAncestorAdded

    }//GEN-LAST:event_TablePhongAncestorAdded

    private void TablePhongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablePhongMouseClicked
       int row = TablePhong.getSelectedRow();
        if (row < 0) return;

        Integer id = (Integer) TablePhong.getValueAt(row, 0);
        String tenPhong = (String) TablePhong.getValueAt(row, 1);
        // Giá phòng trong bảng là Number (Double/Float). Ép về String hiển thị.
        Object giaObj = TablePhong.getValueAt(row, 2);
        String giaPhongStr = giaObj == null ? "" : String.valueOf(giaObj);
        String moTa = (String) TablePhong.getValueAt(row, 3);
        String trangThai = (String) TablePhong.getValueAt(row, 4);

        txtTenPhong.setText(tenPhong);
        txtGiaPhong.setText(giaPhongStr);
        txtMoTa.setText(moTa);
        cbTrangThai.setSelectedItem(trangThai);
        idPhong = id;
    }//GEN-LAST:event_TablePhongMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
         int row = TablePhong.getSelectedRow();
        if (row != -1) {
            Integer rowData = (Integer) TablePhong.getValueAt(row, 0);
            try {
                boolean ok = PhongDAO.deletePhong(rowData);
                if (ok) {
                    JOptionPane.showMessageDialog(this, "Xoá phòng thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                    loadDatas("", "");
                    resetField();
                } else {
                    JOptionPane.showMessageDialog(this, "Xoá phòng thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,
                        "Xoá phòng thất bại. Có thể phòng đang được sử dụng.",
                        "Thông báo", JOptionPane.ERROR_MESSAGE);
                logger.log(java.util.logging.Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn phòng cần xoá", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
  try {
            if (!validateForm(true)) return;

            Phong phong = new Phong();
            phong.setTen_phong(txtTenPhong.getText().trim());
            phong.setMo_ta(txtMoTa.getText().trim());
            phong.setGia_phong(Float.parseFloat(txtGiaPhong.getText().trim()));
            phong.setTrang_thai((String) cbTrangThai.getSelectedItem());

            boolean ok = PhongDAO.createPhong(phong); // không set thời gian: DB tự thêm
            if (ok) {
                JOptionPane.showMessageDialog(this, "Thêm phòng thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                loadDatas("", "");
                resetField();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm phòng thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Thêm phòng thất bại", "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        

    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
         try {
            if (idPhong == null) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn phòng trước khi cập nhật", "Cảnh báo", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (!validateForm(true)) return;

            Phong phong = new Phong();
            phong.setId(idPhong);
            phong.setTen_phong(txtTenPhong.getText().trim());
            phong.setMo_ta(txtMoTa.getText().trim());
             phong.setGia_phong(Float.parseFloat(txtGiaPhong.getText().trim()));
            phong.setTrang_thai((String) cbTrangThai.getSelectedItem());

            boolean ok = PhongDAO.updatePhong(phong); // DB tự cập nhật ngay_cap_nhat
            if (ok) {
                JOptionPane.showMessageDialog(this, "Cập nhật phòng thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                loadDatas("", "");
                resetField();
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật phòng thất bại", "Thông báo", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Cập nhật phòng thất bại", "Cảnh báo", JOptionPane.ERROR_MESSAGE);
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
          String searchName = txtTimKiem.getText().trim();
        String cbName = (String) cbTrangThai.getSelectedItem();
        try {
            // Cho phép tìm theo tên, theo trạng thái, hoặc cả hai
            loadDatas(searchName, cbName);
        } catch (SQLException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnResetActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
         String searchName = txtTimKiem.getText();
         String cbName = (String) cbTrangThai.getSelectedItem();
         
         if (!searchName.isEmpty()&& cbName.isEmpty()) {
             try {
                 loadDatas(searchName, "");
             } catch (SQLException ex) {
                 System.getLogger(QuanLyPhong.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
             }
         }else if (searchName.isEmpty()&& !cbName.isEmpty()) {
                try {
                 loadDatas("", cbName);
             } catch (SQLException ex) {
                 System.getLogger(QuanLyPhong.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
             }
         }else {
                try {
                 loadDatas(searchName, cbName);
             } catch (SQLException ex) {
                 System.getLogger(QuanLyPhong.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
             }
         }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      this.dispose(); // đóng form hiện tại
    java.awt.EventQueue.invokeLater(() -> new TrangChu().setVisible(true));
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> {
            try {
                new QuanLyPhong().setVisible(true);
            } catch (SQLException ex) {
                logger.log(java.util.logging.Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablePhong;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbTrangThai;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtGiaPhong;
    private javax.swing.JTextArea txtMoTa;
    private javax.swing.JTextField txtTenPhong;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
